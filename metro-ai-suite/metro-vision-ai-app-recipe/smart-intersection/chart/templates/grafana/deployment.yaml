apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-grafana
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-grafana
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-grafana
    spec:
      containers:
        - name: grafana
          image: "{{ .Values.grafana.repository }}:{{ .Values.grafana.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: http_proxy
              value: {{ .Values.http_proxy | quote }}
            - name: https_proxy
              value: {{ .Values.https_proxy | quote }}
            - name: no_proxy
              value: "{{ .Values.no_proxy }},influxdb2, ntpserv,smart-intersection-broker,smart-intersection-dlstreamer-pipeline-server,smart-intersection-grafana,smart-intersection-nodered,smart-intersection-pgserver,smart-intersection-scene,smart-intersection-web"
          ports:
            - containerPort: {{ .Values.grafana.service.port }}
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana/  # Persistent storage for dashboards
            - name: grafana-config
              mountPath: /custom
            - name: grafana-secrets
              mountPath: /custom/secrets
              readOnly: true
          command: ["/bin/bash", "-e", "-x", "-c"]
          args:
          - >
            {{- tpl (include "grafana.startup-script" .) . | nindent 12 }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-grafana-pvc
        - name: grafana-config
          configMap:
            name: {{ .Release.Name }}-grafana-config
        - name: grafana-secrets
          secret:
            secretName: {{ .Release.Name }}-grafana-secrets
